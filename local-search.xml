<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>conda入门配置GPU版本的pytorch</title>
    <link href="/2022/11/12/conda%E5%85%A5%E9%97%A8%E9%85%8D%E7%BD%AEGPU%E7%89%88%E6%9C%AC%E7%9A%84pytorch/"/>
    <url>/2022/11/12/conda%E5%85%A5%E9%97%A8%E9%85%8D%E7%BD%AEGPU%E7%89%88%E6%9C%AC%E7%9A%84pytorch/</url>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Anaconda可以便捷获取包且对包能够进行管理，其高性能使用Python、R语言。其包含的科学包包括：conda, numpy, scipy, ipython, notebook, TensorFlow等。它与conda(类似于pip的安装工具)、Anaconda导航器(用于GUI体验)和spyder(用于IDE)一起打包。</p><p>conda：conda是包及其依赖项和环境的管理工具。适用语言：Python, R, Ruby, Lua, Scala, Java, JavaScript, C&#x2F;C++, FORTRAN。用途：快速安装、运行和升级包及其依赖项。在计算机中便捷地创建、保存、加载和切换环境。  conda包和环境管理器包含于Anaconda的所有版本当中。</p><p>pip是用于安装和管理软件包的包管理器。仅适用于Python。Python中默认安装的版本：Python 2.7.9及后续版本：默认安装，命令为pip，Python 3.4及后续版本：默认安装，命令为pip3。pip不一定会展示所需其他依赖包。安装包时或许会直接忽略依赖项而安装，仅在结果中提示错误。在系统自带Python中包的更新&#x2F;回退版本&#x2F;卸载将影响其他程序。</p><p>conda列出所需其他依赖包。 安装包时自动安装其依赖项。可以便捷地在包的不同版本中自由切换。不会影响系统自带Python。conda结合了pip和virtualenv的功能。适用于Python, R, Ruby, Lua, Scala, Java, JavaScript, C&#x2F;C++, FORTRAN。</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>系统：window10</p><blockquote><p>Linux的教程其实还是居多，算是一个劣势</p></blockquote><p>安装教程网上很多，不赘述，<strong>主要是在最后有个安装选项</strong>：是否将conda的python作为window的默认全局python，我没有勾选，个人不需要。</p><p>安装完成之后在路径：<code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Anaconda3 (64-bit)</code>中，可以找到两个终端，其中一个是带powershell，<strong>我一般用的另一个不带的</strong>，不知道区别是什么，反正conda的指令操作全在这上面完成。</p><p>基础配置：</p><p>打开快捷方式<code>Anaconda Prompt (Miniconda3)</code>的属性把其中的Start in改成你想要的路径，以后打开cmd(后面直接用这个称呼，别和window自带的cmd搞混了)默认的路径就是你这里设置的。</p><p>重点：<code>.condarc</code>文件，<a href="https://blog.csdn.net/ljx0951/article/details/104121844">解决.condarc文件找不到的问题</a></p><p>虚拟环境安装路径问题：<a href="https://blog.csdn.net/m0_45176278/article/details/126670991">修改conda默认envs_dirs和pkgs_dirs</a>，这是默认的安装路径，当然可以在指令中加入后缀从而指定安装路径，但是比较麻烦。比如你使用<code>conda create -n a</code>，虚拟环境文件夹的名称为<code>a</code>，它就在<code>envs_dirs</code>中；</p><p>而关于pkgs_dirs的解释可以看下面这个：<a href="https://blog.csdn.net/nyist_yangguang/article/details/109848366">Anaconda中pkgs文件夹详解</a></p><p><strong>如果需要换回conda的默认源</strong>：<code>text conda config --remove-key channels</code></p><p>如果conda提示你版本需要更新了可以使用这个命令：<code>conda update -n base -c defaults conda</code></p><p><strong>第一个难题：</strong></p><p>源。很多教程都说了，为了加快下载用清华源，但是我一般都是科学上网，所以反倒不想换到清华源，但是科学上网无法使用conda，<a href="https://blog.csdn.net/weixin_44994302/article/details/127716897">【Windows】conda下载慢问题，下载源，代理设置</a>解决了我的问题。</p><blockquote><p>这里给一个Liunx版本的<a href="https://segmentfault.com/q/1010000008668178?sort=newest&u_atoken">教程</a></p></blockquote><p>我直接贴一下我的.condarc文件配置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-attr">show_channel_urls</span>: <span class="hljs-literal">true</span><br><span class="hljs-attr">envs_dirs</span>:<br>  - <span class="hljs-attr">D</span>:\<span class="hljs-title class_">CodeField</span>\<span class="hljs-title class_">Python</span>\<span class="hljs-title class_">Conda</span>_dirs\envs_dirs<br><span class="hljs-attr">pkgs_dirs</span>:<br>  - <span class="hljs-attr">D</span>:\<span class="hljs-title class_">CodeField</span>\<span class="hljs-title class_">Python</span>\<span class="hljs-title class_">Conda</span>_dirs\pkgs_dirs<br><span class="hljs-attr">channels</span>:<br>  - defaults<br><span class="hljs-attr">default_channels</span>:<br>  - <span class="hljs-attr">https</span>:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br>  - <span class="hljs-attr">https</span>:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r/</span><br>  - <span class="hljs-attr">https</span>:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2/</span><br>  - <span class="hljs-attr">https</span>:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br>  - <span class="hljs-attr">https</span>:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/</span><br><span class="hljs-attr">custom_channels</span>:<br>  conda-<span class="hljs-attr">forge</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br>  <span class="hljs-attr">msys2</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br>  <span class="hljs-attr">bioconda</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br>  <span class="hljs-attr">menpo</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br>  <span class="hljs-attr">pytorch</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br>  pytorch-<span class="hljs-attr">lts</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br>  <span class="hljs-attr">simpleitk</span>: <span class="hljs-attr">https</span>:<span class="hljs-comment">//mirrors.tuna.tsinghua.edu.cn/anaconda/cloud</span><br><span class="hljs-attr">ssl_verify</span>: <span class="hljs-literal">false</span><br><span class="hljs-attr">proxy_servers</span>:<br>  <span class="hljs-attr">http</span>: <span class="hljs-attr">http</span>:<span class="hljs-comment">//127.0.0.1:33333</span><br>  <span class="hljs-attr">https</span>: <span class="hljs-attr">http</span>:<span class="hljs-comment">//127.0.0.1:33333</span><br></code></pre></td></tr></table></figure><p>安装路径的配置前面我说过了。主要是这个proxy_servers，是根据我自己的代理配置的，后面确实可以用。剩下其实还有两个疑问：<code>ssl_verify</code>与<code>custom_channels</code></p><p><strong>第二个难题：</strong></p><p>这个问题真的是非常狗，再配合上第一个难题，总结下来就是：我TM代理下不成功，逼我用清华源，最后清华源又TM给我安个CPU版本，有想过离线安装，但是配置步骤繁琐，更容易出错，还是使用指令比较好。</p><ul><li>(推荐)<a href="https://blog.csdn.net/HuangJM3/article/details/123685177">安装GPU版本的pytorch（解决pytorch安装时默认安装CPU版本的问题）</a></li><li>(推荐)<a href="https://blog.csdn.net/weixin_43868021/article/details/122083729">清华源conda 安装gpu版本的pytorch总是推送cpu版本解决办法</a></li><li><a href="https://blog.csdn.net/qq_31239371/article/details/120973871">安装Pytorch后torch.cuda.is_available()返回False问题解决</a></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>DC-DC开关电源</title>
    <link href="/2022/10/14/DC-DC%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/"/>
    <url>/2022/10/14/DC-DC%E5%BC%80%E5%85%B3%E7%94%B5%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在板级PCB电路设计中，非常重要的一个领域就是开关电源的设计。任何带电的设备都需要供电，因此开关电源运用广泛，而且涉及很多理论计算，参考书如下：</p><ul><li><a href="file:///M:%5C000_Zotero%5CAttachments%5C_%5C开关电源设计指南_第2版_中文.pdf">开关电源设计指南_第2版_中文.pdf</a></li><li><a href="file:///M:%5C000_Zotero%5CAttachments%5C_%5C开关电源设计_第3版_Abraham_中文.pdf">开关电源设计_第3版_Abraham_中文.pdf</a></li><li><a href="file:///M:%5C000_Zotero%5CAttachments%5C_%5C精通开关电源设计_第2版_Sanjaya_中文.pdf">精通开关电源设计_第2版_Sanjaya_中文.pdf</a></li></ul><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><p>三种基础拓扑：升压、降压、升降压</p><ul><li>电感连接到输入端，升压</li><li>电感连接到输出端，降压</li><li>电感连接到地，升降压</li></ul><p>很好的视频教程：<br><a href="https://www.bilibili.com/video/BV1G34y1d7m4/?spm_id_from=333.337.search-card.all.click&vd_source=9612034d0f48635537c4c7011020bbb0">升压电路原理</a></p><h3 id="经典的拓扑"><a href="#经典的拓扑" class="headerlink" title="经典的拓扑"></a>经典的拓扑</h3><p><strong>经典BUCK</strong></p><p><img src="https://cdn.jsdelivr.net/gh/aqstoner/AqstonerBookAssets@latest/img/202207180914427.png"></p><ol><li>从MOS的通断两个状态去分析</li><li>重点把握住<ol><li>MOS通断时电流的流向</li><li>电感的电压和电流的变化情况</li><li>电感的电压和负载的电压之间的关系</li></ol></li></ol><p>当 Up 为高时，Q1 到导通，D1 反向截止；直流电 Ui 通过 Q1 为电感 L1 储能并为负载提供能量，这一过程中由于 Ui＞Uo,Ui-Uo 的电压加在电感上，在电感没有饱和前，电感电流线性增加，电感储能；</p><p>当 Up 为低时，Q1 截止，电感电流线性减少，由楞次定律可以电感 L1 上会产生一个“右正左负”的感应电动势，此时电感 L1 电容 CE2 释放能量通过整流二极管为负载供电，整流二极管正向导通。</p><p>下面是对应的电流的波形：</p><p><img src="https://cdn.jsdelivr.net/gh/aqstoner/AqstonerBookAssets@latest/img/202207180914678.png"></p><ul><li>关于连续工作和不连续工作？</li><li>那么输出的电流对应的电压的波形呢？为什么流过电感的电流不能突变，所以负载的电压是逐步增大的呢？根据欧姆定律，也就是这里&#x3D;&#x3D;会把负载看作一个线性的电阻器件&#x3D;&#x3D;</li><li>为什么需要加一个电容在负载的两端呢？可以稳定负载两端的电压</li><li>为什么要加一个二极管呢？可以在通断的时候方便将左右两边的电路隔离开来</li></ul><p><strong>经典BOOST</strong></p><p><img src="https://cdn.jsdelivr.net/gh/aqstoner/AqstonerBookAssets@latest/img/202203310819869.png"></p><p><strong>经典的BUCK-BOOST</strong></p><p><img src="https://cdn.jsdelivr.net/gh/aqstoner/AqstonerBookAssets@latest/img/202203311719565.png"></p><p>结论：闭合的时间更长，类似于BOOST，会升压，断开的时间更长，类似于BUCK，会降压</p><p>什么是同步整流？同步整流是采用通态电阻极低的专用功率MOSFET，来取代整流二极管以降低整流损耗的一项新技术。它能大大提高DC&#x2F;DC变换器的效率并且不存在由肖特基势垒电压而造成的死区电压。</p><p><strong>双向同步整流 BUCK-BOOST 电路拓扑</strong></p><p>把前面基础拓扑中的整流二极管也更换成一个MOS了，加上开关本身使用的是MOS，然后是BUCK和BOOST级联，即总共2*2 &#x3D; 4个MOS管。</p><p>通过这种做法，使得通过MOS的通断可以将电路任意调整成升压、降压、升降压三种模式。</p><h3 id="计算部分"><a href="#计算部分" class="headerlink" title="计算部分"></a>计算部分</h3><p>为什么计算部分我单独出来呢？因为日常中只需要对上面的基础拓扑电路有概念就行，计算这个东西记起来麻烦，等要用的时候再去翻书最为合适。</p><h2 id="简易的DC-DC设计"><a href="#简易的DC-DC设计" class="headerlink" title="简易的DC-DC设计"></a>简易的DC-DC设计</h2><p>介绍类型的教程：<a href="https://blog.csdn.net/qq_39400113/article/details/105774945">开关电源的设计电子设计大赛电源类怎么入手</a></p><h3 id="DC-DC降压芯片选型"><a href="#DC-DC降压芯片选型" class="headerlink" title="DC-DC降压芯片选型"></a>DC-DC降压芯片选型</h3><p>按照自己的经验，一般可以分为这么几种：</p><ul><li>集成了开关MOS、电感</li><li>集成了开关MOS</li><li>什么都不集成，单纯作为控制器</li></ul><p>对于一个DC-DC降压电路来说，需要有这么几个部分</p><ul><li>输入电容</li><li>控制中心</li><li>开关MOS</li><li>电感</li><li>输出电容</li></ul><p>前面的分类就取决于DC-DC降压芯片是否包含了开关MOS、电感，如果包含了，在外围电路就不需要，当然这个芯片是一定包含控制中心的。</p><p>接触过的厂家：</p><ul><li>TI：有大功率控制器也有小功率集成，但是价格较贵，而且尺寸大，一般设计大功率的时候选择</li><li>SY：算是国产</li><li>MPS：国产</li><li>SGM(<a href="http://cn.sg-micro.com/">圣邦微电子</a>)：国产</li><li>RY：国产</li></ul><p><a href="https://club.szlcsc.com/article/details_35316_1.html">几款高输入电压小封装SOT23-6的DC-DC降压电路汇总 - 立创社区</a></p><p>后面四个国产一般是设计小功率降压的时候选择，这个时候多为小功率集成芯片，考虑这么几个点：</p><ul><li>输入输出的电压、额定电流、开关频率、工作效率等基本参数是否符合需求</li><li>整个模块电路是否够小、layout是否方便<ul><li>模块电路尺寸大小一般取决于：<ul><li>输入、输出电容的容值，值越大，尺寸越大</li><li>电感的感值，值越大，尺寸越大</li><li>芯片本身的封装大小，大多为SOP8和SOP23，SOP23比SOP8小</li></ul></li></ul></li><li>价格是否便宜</li><li>是否有稳定的淘宝商店，方便购买可用的芯片</li></ul><h3 id="市面上的开关电源测评"><a href="#市面上的开关电源测评" class="headerlink" title="市面上的开关电源测评"></a>市面上的开关电源测评</h3><p><a href="https://www.bilibili.com/video/BV1eU4y1A7uk?from=search&seid=10081496366493007217&spm_id_from=333.337.0.0">新手不要怕！5分钟带你入门开关电源PCB设计_哔哩哔哩_bilibili</a></p><p>这个视频能够很好的帮助你了解用那些指标去衡量一个开关电源做的好不好：带载能力，纹波，温度，效率，动态响应</p><p>注意</p><ul><li>输出短路并不会直接烧坏芯片，因为有些芯片有短路保护功能。</li><li>但是电源开关时的尖峰，动态电阻变化时产生的脉冲都可能会导致电压瞬间上升从而可能烧坏芯片</li></ul><p>元器件的选型主要有输入电容值，芯片选型，电感值，输出电容值四个方面，为了整体性能达到最佳，最好是固定输入输出，这样才能计算出最佳的参数，这些计算公式如下</p><p><img src="https://cdn.jsdelivr.net/gh/aqstoner/AqstonerBookAssets@latest/img/202204271748042.png"></p><blockquote><p>关于动态响应：修改前馈电容改善动态响应度，把电感变小一点也可以<br><img src="https://cdn.jsdelivr.net/gh/aqstoner/AqstonerBookAssets@latest/img/202204271748050.png"></p></blockquote><p> 下面是DC-DC开关电源和别的类型的直流电源的比较</p><p><img src="https://cdn.jsdelivr.net/gh/aqstoner/AqstonerBookAssets@latest/img/202204271748051.jpg"></p><h3 id="TPS54560芯片"><a href="#TPS54560芯片" class="headerlink" title="TPS54560芯片"></a>TPS54560芯片</h3><p>16-25元</p><p><a href="https://so.szlcsc.com/global.html?k=TPS54560&hot-key=0603B105K500NT">TPS54560_TPS54560采购信息-立创电子元器件商城 (szlcsc.com)</a></p><p><a href="https://www.ti.com.cn/product/zh-cn/TPS54560?keyMatch=TPS54560&tisearch=search-everything&usecase=GPN">TPS54560 数据表、产品信息和支持 | 德州仪器 TI.com.cn</a></p><ul><li><p>网址：<a href="https://webench.ti.com/power-designer/switching-regulator/select">Power Designer (ti.com)</a></p></li><li><p>方案：在Vin min&#x3D;24V、Vout&#x3D;5V、Iout max&#x3D;5A的情况下</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/aqstoner/AqstonerBookAssets@latest/img/202203131313978.png"></p><ul><li>测试曲线</li></ul><p><img src="https://cdn.jsdelivr.net/gh/aqstoner/AqstonerBookAssets@latest/img/202203131313192.png"></p><p><a href="https://www.ti.com.cn/">模拟 | 嵌入式处理 | 半导体公司 | 德州仪器 TI.com.cn</a></p><p><a href="https://www.analog.com/cn/index.html">ADI | 混合信号和数字信号处理IC | 亚德诺半导体 (analog.com)</a></p><p><a href="https://www.szlcsc.com/">立创商城_电子元器件采购网上商城_领先的现货元器件交易平台-嘉立创电子商城 (szlcsc.com)</a></p><p><a href="https://www.ti.com.cn/zh-cn/design-resources/design-tools-simulation/webench-power-designer.html">WEBENCH® 电源设计器 | 概述 | 设计资源 | 德州仪器 TI.com.cn</a></p><h2 id="双向DC-DC数字电源设计"><a href="#双向DC-DC数字电源设计" class="headerlink" title="双向DC-DC数字电源设计"></a>双向DC-DC数字电源设计</h2><p>数字电源属于开关电源的一种，是开关电路中的电源的外特性。实际上数字电源没有权威的协会进行定义，所以它的定义是比较宽泛。</p><p>数字电源主要分为两个部分：</p><ul><li>双向DC-DC的电路拓扑</li><li>控制芯片及其外围电路</li></ul><p>这也是我当下正在学习和设计的主题，完成后再更新……</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>AqstonerBlog导读</title>
    <link href="/2022/09/05/Aqstoner%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/09/05/Aqstoner%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="博客的作用"><a href="#博客的作用" class="headerlink" title="博客的作用"></a>博客的作用</h2><p>专注于某一领域时，学习目标多为长期的，为了能够长久的坚持，需要有一定的正向激励，可以分为物质上的激励和精神上的激励。写博客属于后者，意在<strong>把你自己的思考或结论处理成系统化的、可输出的文字，并在公开平台输出，从而获得一定的反馈。</strong></p><p>本博客基于Github Page——静态站点托管服务，作为学习中的输出部分，其目的为获得学习的正向反馈激励。</p><h2 id="博客的内容"><a href="#博客的内容" class="headerlink" title="博客的内容"></a>博客的内容</h2><p>我认为<strong>笔记不等于博客</strong>。笔记的主要功能是<strong>辅助自己进行思考，记录则是其次</strong>。而博客则是将知识分享给其他人。我的方法是，学习的过程中思考并记笔记，在一定阶段的学习结束之后，再总结成博客并进行分享。</p><p>再者，博客不应该等于<strong>知识点的摘录、汇总</strong>，不如说博客的重点不在知识点，而是<strong>对知识按照个人的想法进行解释和总结</strong>，毕竟想阅读知识点直接去阅读相关书籍即可，写博客是需要花费时间的，我并不想将有限的时间花费在排列知识点上。因此，<strong>我的博客将会有浓厚的个人风格</strong>。</p><p>博客文章推荐：<a href="https://zhuanlan.zhihu.com/p/429109281">通信笔&#x2F;面试题 （2）香农公式 - 知乎</a>，该文章从香浓公式说开，衍生到信息论、通信原理、概率论，摘录了多本书籍的相关知识片段，并加上了自己的说明和理解，个人觉得非常不错。</p><h2 id="博客的管理"><a href="#博客的管理" class="headerlink" title="博客的管理"></a>博客的管理</h2><p>更新速度：随缘更新</p><p>分类：直接按照学科领域来进行分类</p><p>标签：不属于学科领域的关键词都可以视作标签</p><blockquote><p>关于分类和标签的使用方式其实牵扯到知识管理的一个关键问题，如果对知识管理感兴趣的可以多了解。</p></blockquote><p><strong>本博客还处于内测期，文档、网页都还不怎么完善，而且我会随意更新文章，渐渐摸索</strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
